global:
  name: consul
  imageK8S: harbor.pks.tm.dev1.premera.cloud/ecs/consul-k8s:0.23.0
  image: harbor.pks.tm.dev1.premera.cloud/ecs/consul-enterprise:1.9.2-ent
  imageEnvoy: "harbor.pks.tm.dev1.premera.cloud/ecs/envoy-alpine:v1.16.0"
  tls:
    enabled: true
    enableAutoEncrypt: true
    httpsOnly: false
    caCert:
      secretName: consul-federation
      secretKey: caCert
    caKey:
      secretName: consul-federation
      secretKey: caKey
  gossipEncryption:
    secretName: "consul-federation"
    secretKey: "gossipEncryptionKey"
  federation:
    enabled: true
  acls:
   manageSystemACLs: true
   replicationToken:
     secretName: "consul-federation"
     secretKey: "replicationToken"
  enablePodSecurityPolicies: true
controller:
    enabled: true
server:
  # updatePartition: 0
  enterpriseLicense:
    secretName: 'consul-ent-license'
    secretKey: 'key'
  storageClass: consul-storageclass
  extraVolumes:
  - type: secret
    name: consul-federation
    items:
      - key: serverConfigJSON
        path: config.json
    load: true
  extraConfig: |
    {     
      "audit": {
      "enabled": true,      
      "sink": [
      {
        "stdout": [
         {
           "type": "file",
           "format": "json",
           "path": "/dev/stdout",
           "delivery_guarantee": "best-effort"
           }
          ]
         }
        ]
      }
    }
connectInject:
  enabled: true
meshGateway:
  enabled: true
  service:
    annotations: |
      "service.beta.kubernetes.io/azure-load-balancer-internal": "true"
      "service.beta.kubernetes.io/azure-load-balancer-internal-subnet": "dev1-pks-loadbalancers"
client:
  # updateStrategy: | 
  #   rollingUpdate: 
  #     maxUnavailable: 2 
  #   type: OnDelete           #RollingUpdate
  enabled: true
  snapshotAgent:
    enabled: true
    configSecret:
      secretName: consul-snapshot-config
      secretKey: config
ingressGateways:
  enabled: true
  defaults:
    replicas: 2
    service:
      # Type of service: LoadBalancer, ClusterIP or NodePort. If using NodePort service
      # type, you must set the desired nodePorts in the `ports` setting below.
      type: LoadBalancer

      # Ports that will be exposed on the service and gateway container. Any
      # ports defined as ingress listeners on the gateway's Consul configuration
      # entry should be included here. The first port will be used as part of
      # the Consul service registration for the gateway and be listed in its
      # SRV record. If using a NodePort service type, you must specify the
      # desired nodePort for each exposed port.
      # @type: array<map>
      # @default: [{port: 8080, port: 8443}]
      # @recurse: false
      ports:
        - port: 443
          nodePort: null
        - port: 8080
          nodePort: null
        - port: 8443
          nodePort: null
      # Annotations to apply to the ingress gateway service. Annotations defined
      # here will be applied to all ingress gateway services in addition to any
      # service annotations defined for a specific gateway in `ingressGateways.gateways`.
      #
      # Example:
      #
      # ```yaml
      # annotations: |
      #   'annotation-key': annotation-value
      # ```
      # @type: string
      annotations: |
        "service.beta.kubernetes.io/azure-load-balancer-internal": "true"
        "service.beta.kubernetes.io/azure-load-balancer-internal-subnet": "dev1-pks-loadbalancers"

    serviceAccount:
      annotations: null

    resources:
      requests:
        memory: "100Mi"
        cpu: "100m"
      limits:
        memory: "100Mi"
        cpu: "100m"

    initCopyConsulContainer:
      resources:
        requests:
          memory: "25Mi"
          cpu: "50m"
        limits:
          memory: "150Mi"
          cpu: "50m"

    affinity: |
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: {{ template "consul.name" . }}
                release: "{{ .Release.Name }}"
                component: ingress-gateway
            topologyKey: kubernetes.io/hostname

    # Optional YAML string to specify tolerations.
    # @type: string
    tolerations: null

    # Optional YAML string to specify a nodeSelector config.
    # @type: string
    nodeSelector: null

    # Optional priorityClassName.
    priorityClassName: ""

    # Annotations to apply to the ingress gateway deployment. Annotations defined
    # here will be applied to all ingress gateway deployments in addition to any
    # annotations defined for a specific gateway in `ingressGateways.gateways`.
    #
    # Example:
    #
    # ```yaml
    # annotations: |
    #   "annotation-key": 'annotation-value'
    # ```
    # @type: string
    annotations: null
    consulNamespace: "consul"
  gateways:
    - name: ingress-gateway
